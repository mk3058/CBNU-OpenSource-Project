{"ast":null,"code":"var _jsxFileName = \"/Users/minkyu/Desktop/CBNU-OpenSource-Project/src/App.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVICE_KEY = \"#### API SERVICE KEY ####\";\nconst DATA_TYPE = \"JSON\";\nconst WeatherGraph = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst?ServiceKey=#### API SERVICE KEY ####&pageNo=1&numOfRows=290&dataType=JSON&base_date=20230502&base_time=2300&nx=55&ny=128\").then(response => response.json()).then(json => json.response.body.items.item).then(items => items.filter(item => item.fcstDate === '20230503' && item.category === 'POP')).then(filteredItems => setData(filteredItems.map(item => ({\n      name: item.fcstTime,\n      value: item.fcstValue\n    }))));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    width: 500,\n    height: 300,\n    data: data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherGraph, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = WeatherGraph;\nexport default WeatherGraph;\nvar _c;\n$RefreshReg$(_c, \"WeatherGraph\");","map":{"version":3,"names":["axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","SERVICE_KEY","DATA_TYPE","WeatherGraph","_s","data","setData","useState","useEffect","fetch","then","response","json","body","items","item","filter","fcstDate","category","filteredItems","map","name","fcstTime","value","fcstValue","width","height","margin","top","right","left","bottom","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["/Users/minkyu/Desktop/CBNU-OpenSource-Project/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst SERVICE_KEY = \"#### API SERVICE KEY ####\";\nconst DATA_TYPE = \"JSON\";\n\n\n\nconst WeatherGraph = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0/getVilageFcst?ServiceKey=#### API SERVICE KEY ####&pageNo=1&numOfRows=290&dataType=JSON&base_date=20230502&base_time=2300&nx=55&ny=128\")\n      .then(response => response.json())\n      .then(json => json.response.body.items.item)\n      .then(items => items.filter(item => item.fcstDate === '20230503' && item.category === 'POP'))\n      .then(filteredItems => setData(filteredItems.map(item => ({name: item.fcstTime, value: item.fcstValue}))))\n  }, [])\n\n  return (\n    <LineChart\n      width={500}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n    </LineChart>\n  );\n}\n\nexport default WeatherGraph;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzF,MAAMC,WAAW,GAAG,sGAAsG;AAC1H,MAAMC,SAAS,GAAG,MAAM;AAIxB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdC,KAAK,CAAC,4QAA4Q,CAAC,CAChRC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,CAC3CL,IAAI,CAACI,KAAK,IAAIA,KAAK,CAACE,MAAM,CAACD,IAAI,IAAIA,IAAI,CAACE,QAAQ,KAAK,UAAU,IAAIF,IAAI,CAACG,QAAQ,KAAK,KAAK,CAAC,CAAC,CAC5FR,IAAI,CAACS,aAAa,IAAIb,OAAO,CAACa,aAAa,CAACC,GAAG,CAACL,IAAI,KAAK;MAACM,IAAI,EAAEN,IAAI,CAACO,QAAQ;MAAEC,KAAK,EAAER,IAAI,CAACS;IAAS,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9G,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA,CAACR,SAAS;IACRiC,KAAK,EAAE,GAAI;IACXC,MAAM,EAAE,GAAI;IACZrB,IAAI,EAAEA,IAAK;IACXsB,MAAM,EAAE;MACNC,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,gBAEFhC,OAAA,CAACJ,aAAa;MAACqC,eAAe,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCrC,OAAA,CAACN,KAAK;MAAC4C,OAAO,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxBrC,OAAA,CAACL,KAAK;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTrC,OAAA,CAACH,OAAO;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXrC,OAAA,CAACF,MAAM;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrC,OAAA,CAACP,IAAI;MAAC8C,IAAI,EAAC,UAAU;MAACD,OAAO,EAAC,OAAO;MAACE,MAAM,EAAC,SAAS;MAACC,SAAS,EAAE;QAAEC,CAAC,EAAE;MAAE;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEhB,CAAC;AAAAjC,EAAA,CA/BKD,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}